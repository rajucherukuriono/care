<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <decisions>
        <description>To check the initial input values</description>
        <name>CheckInputScreen</name>
        <label>CheckInputScreen</label>
        <locationX>446</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>Error_Message_For_Null_Input</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>OnlyEmailFilled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Member_ID_Input</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Member_Email_Input</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAccountBasedOnEmailId</targetReference>
            </connector>
            <label>OnlyEmailFilled</label>
        </rules>
        <rules>
            <name>OnlyMemeberIdFilled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Member_Email_Input</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Member_ID_Input</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAccountBasedOnMemberId</targetReference>
            </connector>
            <label>OnlyMemeberIdFilled</label>
        </rules>
        <rules>
            <name>BothEmailAndMemberIdFilled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Member_Email_Input</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Member_ID_Input</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account</targetReference>
            </connector>
            <label>BothEmailAndMemberIdFilled</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_Account_Exist</name>
        <label>Does Account Exist</label>
        <locationX>446</locationX>
        <locationY>650</locationY>
        <defaultConnector>
            <targetReference>Get_Case_Details</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Account_Not_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>account.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Account_Not_Found_Screen</targetReference>
            </connector>
            <label>Account Not Found</label>
        </rules>
    </decisions>
    <description>Screen Flow that will allow an end user to create a new Case record while looking at at Chat Transcript record.</description>
    <environments>Default</environments>
    <interviewLabel>Create Case From Chat Transcript {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Create Case From Chat Transcript</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <description>This is the action that will create the Case Record</description>
        <name>Create_Case_Record</name>
        <label>Create Case Record</label>
        <locationX>578</locationX>
        <locationY>866</locationY>
        <connector>
            <targetReference>Case_Lookup</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>account.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>Description_Input</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Origin</field>
            <value>
                <stringValue>Chat</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <stringValue>01270000000Dq7EAAS</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Manually Created Chat Case</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Case_Lookup</name>
        <label>Case Lookup</label>
        <locationX>578</locationX>
        <locationY>974</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Chat_Transcript</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Create_Case_Record</elementReference>
            </value>
        </filters>
        <object>Case</object>
        <outputAssignments>
            <assignToReference>case.CaseNumber</assignToReference>
            <field>CaseNumber</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>This will lookup the Account from the previous Screen component&apos;s Lookup field.</description>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_Account_Exist</targetReference>
        </connector>
        <filterLogic>1 OR 2 OR 3</filterLogic>
        <filters>
            <field>PersonEmail</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Member_Email_Input</elementReference>
            </value>
        </filters>
        <filters>
            <field>Account_Email__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Member_Email_Input</elementReference>
            </value>
        </filters>
        <filters>
            <field>MemberID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Member_ID_Input</elementReference>
            </value>
        </filters>
        <object>Account</object>
        <outputAssignments>
            <assignToReference>account.Id</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>GetAccountBasedOnEmailId</name>
        <label>GetAccountBasedOnEmailId</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_Account_Exist</targetReference>
        </connector>
        <filterLogic>1 OR 2</filterLogic>
        <filters>
            <field>PersonEmail</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Member_Email_Input</elementReference>
            </value>
        </filters>
        <filters>
            <field>Account_Email__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Member_Email_Input</elementReference>
            </value>
        </filters>
        <object>Account</object>
        <outputAssignments>
            <assignToReference>account.Id</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>GetAccountBasedOnMemberId</name>
        <label>GetAccountBasedOnMemberId</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_Account_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>MemberID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Member_ID_Input</elementReference>
            </value>
        </filters>
        <object>Account</object>
        <outputAssignments>
            <assignToReference>account.Id</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <description>Update the Chat Transcript record with the CaseId, the Case.AccountId and the Case.ContactId</description>
        <name>Update_Chat_Transcript</name>
        <label>Update Chat Transcript</label>
        <locationX>578</locationX>
        <locationY>1082</locationY>
        <connector>
            <targetReference>Success_Screen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>account.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CaseId</field>
            <value>
                <elementReference>Create_Case_Record</elementReference>
            </value>
        </inputAssignments>
        <object>LiveChatTranscript</object>
    </recordUpdates>
    <screens>
        <name>Account_Not_Found_Screen</name>
        <label>Account Not Found Screen</label>
        <locationX>314</locationX>
        <locationY>758</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>End_Screen</targetReference>
        </connector>
        <fields>
            <name>Account_Not_Found_Display_Text</name>
            <fieldText>&lt;p&gt;A Member was not found with either that email address or Member ID.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>End_Screen</name>
        <label>End Screen</label>
        <locationX>446</locationX>
        <locationY>1382</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>End_Screen_Text</name>
            <fieldText>&lt;p&gt;Click Finish to end this.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Error_Message_For_Null_Input</name>
        <label>Error Message For Null Input</label>
        <locationX>842</locationX>
        <locationY>350</locationY>
        <allowBack>true</allowBack>
        <allowFinish>false</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>NullVauleError</name>
            <fieldText>&lt;p&gt;Please fill any of the Input Value&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This screen will allow the user to input information to be collected in the new Case.</description>
        <name>Get_Case_Details</name>
        <label>Get Case Details</label>
        <locationX>578</locationX>
        <locationY>758</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Create_Case_Record</targetReference>
        </connector>
        <fields>
            <name>Description_Input</name>
            <dataType>String</dataType>
            <fieldText>Description</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This is the main screen with text detailing what the flow does.</description>
        <name>Initial_Screen</name>
        <label>Initial Screen</label>
        <locationX>446</locationX>
        <locationY>134</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>CheckInputScreen</targetReference>
        </connector>
        <fields>
            <name>Initial_Display_Text</name>
            <fieldText>&lt;p&gt;Create a new Case by looking up the Member by email or Member ID.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Member_ID_Input</name>
            <dataType>String</dataType>
            <fieldText>Member ID</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>Member_Email_Input</name>
            <dataType>String</dataType>
            <fieldText>Member Email</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This screen will let the user know that a case was created.</description>
        <name>Success_Screen</name>
        <label>Success Screen</label>
        <locationX>578</locationX>
        <locationY>1190</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>End_Screen</targetReference>
        </connector>
        <fields>
            <name>Case_Created_Success_Screen</name>
            <fieldText>&lt;p&gt;&lt;a href=&quot;https://caredotcom.lightning.force.com/lightning/r/Case/{!Create_Case_Record}/view&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Case #{!case.CaseNumber} has been created!&lt;/a&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Initial_Screen</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>account</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>case</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <description>This is the chat transcript Id</description>
        <name>recordId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>LiveChatTranscript</objectType>
    </variables>
</Flow>
